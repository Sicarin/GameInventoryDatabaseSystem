-- MySQL Script generated by MySQL Workbench
-- Sun Dec  8 18:43:26 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP DATABASE IF EXISTS GameInventoryDB;
CREATE DATABASE GameInventoryDB;
USE GameInventoryDB;
-- -----------------------------------------------------
-- Table `User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `User` ;

CREATE TABLE IF NOT EXISTS `User` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `tracking_id` INT NOT NULL,
  `first_time_user` TINYINT NOT NULL,
  `has_access` TINYINT NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `tracking_id_UNIQUE` (`tracking_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Genre` ;

CREATE TABLE IF NOT EXISTS `Genre` (
  `genre_id` INT NOT NULL AUTO_INCREMENT,
  `genre_name` VARCHAR(45) NOT NULL,
  `custom_genre` TINYINT NOT NULL,
  PRIMARY KEY (`genre_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Platform`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Platform` ;

CREATE TABLE IF NOT EXISTS `Platform` (
  `platform_id` INT NOT NULL AUTO_INCREMENT,
  `platform_name` VARCHAR(45) NOT NULL,
  `release_date` DATE NOT NULL,
  PRIMARY KEY (`platform_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameGuild`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameGuild` ;

CREATE TABLE IF NOT EXISTS `GameGuild` (
  `game_guild_id` INT NOT NULL AUTO_INCREMENT,
  `platform_id` INT NULL,
  `guild_name` VARCHAR(45) NOT NULL,
  `guild_color` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`game_guild_id`),
  INDEX `FK_GAMEGUILD_PLATFORM_idx` (`platform_id` ASC) VISIBLE,
  CONSTRAINT `FK_GAMEGUILD_PLATFORM`
    FOREIGN KEY (`platform_id`)
    REFERENCES `Platform` (`platform_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Developer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Developer` ;

CREATE TABLE IF NOT EXISTS `Developer` (
  `developer_id` INT NOT NULL AUTO_INCREMENT,
  `developer_name` VARCHAR(45) NOT NULL,
  `established` DATE NOT NULL,
  PRIMARY KEY (`developer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Publisher`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Publisher` ;

CREATE TABLE IF NOT EXISTS `Publisher` (
  `publisher_id` INT NOT NULL AUTO_INCREMENT,
  `publisher_name` VARCHAR(45) NOT NULL,
  `established` DATE NOT NULL,
  PRIMARY KEY (`publisher_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Game`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Game` ;

CREATE TABLE IF NOT EXISTS `Game` (
  `game_id` INT NOT NULL AUTO_INCREMENT,
  `game_title` VARCHAR(45) NOT NULL,
  `developer_id` INT NOT NULL,
  `publisher_id` INT NOT NULL,
  PRIMARY KEY (`game_id`),
  INDEX `FK_GAME_DEVELOPER_idx` (`developer_id` ASC) VISIBLE,
  INDEX `FK_GAME_PUBLISHER_idx` (`publisher_id` ASC) VISIBLE,
  CONSTRAINT `FK_GAME_DEVELOPER`
    FOREIGN KEY (`developer_id`)
    REFERENCES `Developer` (`developer_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_GAME_PUBLISHER`
    FOREIGN KEY (`publisher_id`)
    REFERENCES `Publisher` (`publisher_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameParty`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameParty` ;

CREATE TABLE IF NOT EXISTS `GameParty` (
  `game_party_id` INT NOT NULL AUTO_INCREMENT,
  `created` DATE NOT NULL,
  `game_guild_id` INT NULL,
  `platform_id` INT NULL,
  `game_id` INT NULL,
  PRIMARY KEY (`game_party_id`),
  INDEX `FK_GAMEPARTY_GAMEGUILD_idx` (`game_guild_id` ASC) VISIBLE,
  INDEX `FK_GAMEPARTY_PLATFORM_idx` (`platform_id` ASC) VISIBLE,
  INDEX `FK_GAMEPARTY_GAME_idx` (`game_id` ASC) VISIBLE,
  CONSTRAINT `FK_GAMEPARTY_GAMEGUILD`
    FOREIGN KEY (`game_guild_id`)
    REFERENCES `GameGuild` (`game_guild_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_GAMEPARTY_PLATFORM`
    FOREIGN KEY (`platform_id`)
    REFERENCES `Platform` (`platform_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_GAMEPARTY_GAME`
    FOREIGN KEY (`game_id`)
    REFERENCES `Game` (`game_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `RegisteredUser`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RegisteredUser` ;

CREATE TABLE IF NOT EXISTS `RegisteredUser` (
  `registered_user_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `favorite_genre` INT NULL,
  `has_best_friend` TINYINT NOT NULL,
  `game_party_id` INT NULL,
  `game_guild_id` INT NULL,
  `purchase_points` INT NULL DEFAULT 0,
  PRIMARY KEY (`registered_user_id`, `user_id`),
  INDEX `FK_REGUSER_FAVORITEGENRE_idx` (`favorite_genre` ASC) VISIBLE,
  INDEX `FK_REGUSER_GAMEPARTY_idx` (`game_party_id` ASC) VISIBLE,
  INDEX `FK_REGUSER_GAMEGUILD_idx` (`game_guild_id` ASC) VISIBLE,
  INDEX `PKFK_REGUSER_USER_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `FK_REGUSER_FAVORITEGENRE`
    FOREIGN KEY (`favorite_genre`)
    REFERENCES `Genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_REGUSER_GAMEPARTY`
    FOREIGN KEY (`game_party_id`)
    REFERENCES `GameParty` (`game_party_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_REGUSER_GAMEGUILD`
    FOREIGN KEY (`game_guild_id`)
    REFERENCES `GameGuild` (`game_guild_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_REGUSER_USER`
    FOREIGN KEY (`user_id`)
    REFERENCES `User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BestFriend`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BestFriend` ;

CREATE TABLE IF NOT EXISTS `BestFriend` (
  `best_friend_id` INT NOT NULL AUTO_INCREMENT,
  `registered_user_id` INT NOT NULL,
  PRIMARY KEY (`best_friend_id`, `registered_user_id`),
  INDEX `PKFK_BESTFRIEND_REGUSER_idx` (`registered_user_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_BESTFRIEND_REGUSER`
    FOREIGN KEY (`registered_user_id`)
    REFERENCES `RegisteredUser` (`registered_user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Account` ;

CREATE TABLE IF NOT EXISTS `Account` (
  `account_id` INT NOT NULL AUTO_INCREMENT,
  `registered_user_id` INT NOT NULL,
  `creation_date` DATE NOT NULL,
  `is_validated` TINYINT NOT NULL,
  PRIMARY KEY (`account_id`, `registered_user_id`),
  INDEX `PKFK_ACCOUNT_REGUSER_idx` (`registered_user_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_ACCOUNT_REGUSER`
    FOREIGN KEY (`registered_user_id`)
    REFERENCES `RegisteredUser` (`registered_user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PaymentMethod`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PaymentMethod` ;

CREATE TABLE IF NOT EXISTS `PaymentMethod` (
  `payment_method_id` INT NOT NULL AUTO_INCREMENT,
  `registered_user_id` INT NOT NULL,
  `address` VARCHAR(100) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` CHAR(2) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `zipcode` CHAR(5) NOT NULL,
  PRIMARY KEY (`payment_method_id`),
  INDEX `FK_PAYMENTMETHOD_REGUSER_idx` (`registered_user_id` ASC) VISIBLE,
  CONSTRAINT `FK_PAYMENTMETHOD_REGUSER`
    FOREIGN KEY (`registered_user_id`)
    REFERENCES `RegisteredUser` (`registered_user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CreditCardPaymentMethod`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CreditCardPaymentMethod` ;

CREATE TABLE IF NOT EXISTS `CreditCardPaymentMethod` (
  `card_id` TINYINT(1) NOT NULL,
  `payment_method_id` INT NOT NULL,
  `bank_code` VARCHAR(45) NOT NULL,
  `verification_value` CHAR(3) NOT NULL,
  `expiration_date` DATE NOT NULL,
  `card_number` VARCHAR(16) NOT NULL,
  PRIMARY KEY (`card_id`),
  INDEX `FK_CREDITCARDPAYMENTMETHOD_PAYMENTMETHOD_idx` (`payment_method_id` ASC) VISIBLE,
  CONSTRAINT `FK_CREDITCARDPAYMENTMETHOD_PAYMENTMETHOD`
    FOREIGN KEY (`payment_method_id`)
    REFERENCES `PaymentMethod` (`payment_method_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameOwnership`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameOwnership` ;

CREATE TABLE IF NOT EXISTS `GameOwnership` (
  `game_ownership_id` INT NOT NULL AUTO_INCREMENT,
  `game_id` INT NOT NULL,
  `registered_user_id` INT NOT NULL,
  `total_games_owned` INT NOT NULL,
  PRIMARY KEY (`game_ownership_id`, `game_id`, `registered_user_id`),
  INDEX `PKFK_GAMEOWNERSHIP_GAME_idx` (`game_id` ASC) VISIBLE,
  INDEX `PKFK_GAMEOWNERSHIP_REGUSER_idx` (`registered_user_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_GAMEOWNERSHIP_GAME`
    FOREIGN KEY (`game_id`)
    REFERENCES `Game` (`game_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_GAMEOWNERSHIP_REGUSER`
    FOREIGN KEY (`registered_user_id`)
    REFERENCES `RegisteredUser` (`registered_user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameGenre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameGenre` ;

CREATE TABLE IF NOT EXISTS `GameGenre` (
  `game_genre_id` INT NOT NULL AUTO_INCREMENT,
  `subgenre` VARCHAR(45) NULL,
  `game_id` INT NOT NULL,
  `genre_id` INT NOT NULL,
  PRIMARY KEY (`game_genre_id`, `game_id`, `genre_id`),
  INDEX `PKFK_GAMEGENRE_GAME_idx` (`game_id` ASC) VISIBLE,
  INDEX `PKFK_GAMEGENRE_GENRE_idx` (`genre_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_GAMEGENRE_GAME`
    FOREIGN KEY (`game_id`)
    REFERENCES `Game` (`game_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_GAMEGENRE_GENRE`
    FOREIGN KEY (`genre_id`)
    REFERENCES `Genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Forum`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Forum` ;

CREATE TABLE IF NOT EXISTS `Forum` (
  `forum_id` INT NOT NULL AUTO_INCREMENT,
  `forum_name` VARCHAR(45) NOT NULL,
  `topic` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`forum_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DiscussionPost`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DiscussionPost` ;

CREATE TABLE IF NOT EXISTS `DiscussionPost` (
  `discussion_post_id` INT NOT NULL AUTO_INCREMENT,
  `forum_id` INT NOT NULL,
  `registered_user_id` INT NOT NULL,
  `topic` VARCHAR(30) NOT NULL,
  `created` DATE NOT NULL,
  PRIMARY KEY (`discussion_post_id`),
  INDEX `FK_DISCUSSIONPOST_FORUM_idx` (`forum_id` ASC) VISIBLE,
  INDEX `FK_DISCUSSIONPOST_REGUSER_idx` (`registered_user_id` ASC) VISIBLE,
  CONSTRAINT `FK_DISCUSSIONPOST_FORUM`
    FOREIGN KEY (`forum_id`)
    REFERENCES `Forum` (`forum_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_DISCUSSIONPOST_REGUSER`
    FOREIGN KEY (`registered_user_id`)
    REFERENCES `RegisteredUser` (`registered_user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DiscussionReply`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DiscussionReply` ;

CREATE TABLE IF NOT EXISTS `DiscussionReply` (
  `discussion_reply_id` INT NOT NULL AUTO_INCREMENT,
  `discussion_post_id` INT NOT NULL,
  `registered_user_id` INT NOT NULL,
  `created` DATE NOT NULL,
  `has_reply_parent` TINYINT NOT NULL,
  PRIMARY KEY (`discussion_reply_id`),
  INDEX `FK_DISCUSSIONREPLY_DISCUSSPOST_idx` (`discussion_post_id` ASC) VISIBLE,
  INDEX `FK_DISCUSSIONREPLY_REGUSER_idx` (`registered_user_id` ASC) VISIBLE,
  CONSTRAINT `FK_DISCUSSIONREPLY_DISCUSSPOST`
    FOREIGN KEY (`discussion_post_id`)
    REFERENCES `DiscussionPost` (`discussion_post_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_DISCUSSIONREPLY_REGUSER`
    FOREIGN KEY (`registered_user_id`)
    REFERENCES `RegisteredUser` (`registered_user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ReplyParent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ReplyParent` ;

CREATE TABLE IF NOT EXISTS `ReplyParent` (
  `reply_parent_id` INT NOT NULL AUTO_INCREMENT,
  `discussion_reply_id` INT NOT NULL,
  PRIMARY KEY (`reply_parent_id`, `discussion_reply_id`),
  INDEX `PKFK_REPLYPARENT_DISCUSSREPLY_idx` (`discussion_reply_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_REPLYPARENT_DISCUSSREPLY`
    FOREIGN KEY (`discussion_reply_id`)
    REFERENCES `DiscussionReply` (`discussion_reply_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DeveloperGenre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DeveloperGenre` ;

CREATE TABLE IF NOT EXISTS `DeveloperGenre` (
  `developer_genre_id` INT NOT NULL AUTO_INCREMENT,
  `games_developed` INT NOT NULL,
  `developer_id` INT NOT NULL,
  `genre_id` INT NOT NULL,
  PRIMARY KEY (`developer_genre_id`, `developer_id`, `genre_id`),
  INDEX `PKFK_DEVELOPERGENRE_DEVELOPER_idx` (`developer_id` ASC) VISIBLE,
  INDEX `PKFK_DEVELOPERGENRE_GENRE_idx` (`genre_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_DEVELOPERGENRE_DEVELOPER`
    FOREIGN KEY (`developer_id`)
    REFERENCES `Developer` (`developer_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_DEVELOPERGENRE_GENRE`
    FOREIGN KEY (`genre_id`)
    REFERENCES `Genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DeveloperPlatform`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DeveloperPlatform` ;

CREATE TABLE IF NOT EXISTS `DeveloperPlatform` (
  `developer_platform_id` INT NOT NULL AUTO_INCREMENT,
  `games_developed` INT NOT NULL,
  `developer_id` INT NOT NULL,
  `platform_id` INT NOT NULL,
  PRIMARY KEY (`developer_platform_id`, `developer_id`, `platform_id`),
  INDEX `PKFK_DEVPLATFORM_DEVELOPER_idx` (`developer_id` ASC) VISIBLE,
  INDEX `PKFK_DEVPLATFORM_PLATFORM_idx` (`platform_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_DEVPLATFORM_DEVELOPER`
    FOREIGN KEY (`developer_id`)
    REFERENCES `Developer` (`developer_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_DEVPLATFORM_PLATFORM`
    FOREIGN KEY (`platform_id`)
    REFERENCES `Platform` (`platform_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PublisherGenre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PublisherGenre` ;

CREATE TABLE IF NOT EXISTS `PublisherGenre` (
  `publisher_genre_id` INT NOT NULL AUTO_INCREMENT,
  `games_published` INT NOT NULL,
  `publisher_id` INT NOT NULL,
  `genre_id` INT NOT NULL,
  PRIMARY KEY (`publisher_genre_id`, `publisher_id`, `genre_id`),
  INDEX `PKFK_PUBGENRE_PUBLISHER_idx` (`publisher_id` ASC) VISIBLE,
  INDEX `PKFK_PUBGENRE_GENRE_idx` (`genre_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_PUBGENRE_PUBLISHER`
    FOREIGN KEY (`publisher_id`)
    REFERENCES `Publisher` (`publisher_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_PUBGENRE_GENRE`
    FOREIGN KEY (`genre_id`)
    REFERENCES `Genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PublisherPlatform`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PublisherPlatform` ;

CREATE TABLE IF NOT EXISTS `PublisherPlatform` (
  `publisher_platform_id` INT NOT NULL AUTO_INCREMENT,
  `games_published` INT NOT NULL,
  `publisher_id` INT NOT NULL,
  `platform_id` INT NOT NULL,
  PRIMARY KEY (`publisher_platform_id`, `publisher_id`, `platform_id`),
  INDEX `PKFK_PUBPLATFORM_PUBLISHER_idx` (`publisher_id` ASC) VISIBLE,
  INDEX `PKFK_PUBPLATFORM_PLATFORM_idx` (`platform_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_PUBPLATFORM_PUBLISHER`
    FOREIGN KEY (`publisher_id`)
    REFERENCES `Publisher` (`publisher_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_PUBPLATFORM_PLATFORM`
    FOREIGN KEY (`platform_id`)
    REFERENCES `Platform` (`platform_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Marketplace`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Marketplace` ;

CREATE TABLE IF NOT EXISTS `Marketplace` (
  `marketplace_id` INT NOT NULL AUTO_INCREMENT,
  `marketplace_name` VARCHAR(45) NOT NULL,
  `num_games` INT NULL,
  PRIMARY KEY (`marketplace_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Bundle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Bundle` ;

CREATE TABLE IF NOT EXISTS `Bundle` (
  `bundle_id` INT NOT NULL AUTO_INCREMENT,
  `bundle_name` VARCHAR(45) NOT NULL,
  `genre_id` INT NULL,
  `marketplace_id` INT NOT NULL,
  PRIMARY KEY (`bundle_id`),
  INDEX `FK_BUNDLE_GENRE_idx` (`genre_id` ASC) VISIBLE,
  INDEX `FK_BUNDLE_MARKETPLACE_idx` (`marketplace_id` ASC) VISIBLE,
  CONSTRAINT `FK_BUNDLE_GENRE`
    FOREIGN KEY (`genre_id`)
    REFERENCES `Genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_BUNDLE_MARKETPLACE`
    FOREIGN KEY (`marketplace_id`)
    REFERENCES `Marketplace` (`marketplace_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UserBundle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `UserBundle` ;

CREATE TABLE IF NOT EXISTS `UserBundle` (
  `user_bundle_id` INT NOT NULL AUTO_INCREMENT,
  `date_purchased` DATE NOT NULL,
  `bundle_id` INT NOT NULL,
  `registered_user_id` INT NOT NULL,
  PRIMARY KEY (`user_bundle_id`, `bundle_id`, `registered_user_id`),
  INDEX `PKFK_USERBUNDLE_BUNDLE_idx` (`bundle_id` ASC) VISIBLE,
  INDEX `PKFK_USERBUNDLE_REGUSER_idx` (`registered_user_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_USERBUNDLE_BUNDLE`
    FOREIGN KEY (`bundle_id`)
    REFERENCES `Bundle` (`bundle_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_USERBUNDLE_REGUSER`
    FOREIGN KEY (`registered_user_id`)
    REFERENCES `RegisteredUser` (`registered_user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameBundle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameBundle` ;

CREATE TABLE IF NOT EXISTS `GameBundle` (
  `game_bundle_id` INT NOT NULL AUTO_INCREMENT,
  `num_games` TINYINT NOT NULL,
  `game_id` INT NOT NULL,
  `bundle_id` INT NOT NULL,
  PRIMARY KEY (`game_bundle_id`, `game_id`, `bundle_id`),
  INDEX `PKFK_GAMEBUNDLE_GAME_idx` (`game_id` ASC) VISIBLE,
  INDEX `PKFK_GAMEBUNDLE_BUNDLE_idx` (`bundle_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_GAMEBUNDLE_GAME`
    FOREIGN KEY (`game_id`)
    REFERENCES `Game` (`game_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_GAMEBUNDLE_BUNDLE`
    FOREIGN KEY (`bundle_id`)
    REFERENCES `Bundle` (`bundle_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameCollectionSubgroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameCollectionSubgroup` ;

CREATE TABLE IF NOT EXISTS `GameCollectionSubgroup` (
  `game_subgroup_id` INT NOT NULL AUTO_INCREMENT,
  `genre` INT NOT NULL,
  `registered_user_id` INT NOT NULL,
  PRIMARY KEY (`game_subgroup_id`),
  INDEX `FK_GAMESUBGROUP_GENRE_idx` (`genre` ASC) VISIBLE,
  INDEX `FK_GAMESUBGROUP_REGUSER_idx` (`registered_user_id` ASC) VISIBLE,
  CONSTRAINT `FK_GAMESUBGROUP_GENRE`
    FOREIGN KEY (`genre`)
    REFERENCES `Genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_GAMESUBGROUP_REGUSER`
    FOREIGN KEY (`registered_user_id`)
    REFERENCES `RegisteredUser` (`registered_user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameCollection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameCollection` ;

CREATE TABLE IF NOT EXISTS `GameCollection` (
  `game_collection_id` INT NOT NULL AUTO_INCREMENT,
  `num_games` INT NOT NULL,
  `game_subgroup_id` INT NOT NULL,
  `game_id` INT NOT NULL,
  PRIMARY KEY (`game_collection_id`, `game_subgroup_id`, `game_id`),
  INDEX `PKFK_GAMECOLLECTION_GAMESUBGROUP_idx` (`game_subgroup_id` ASC) VISIBLE,
  INDEX `PKFK_GAMECOLLECTION_GAME_idx` (`game_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_GAMECOLLECTION_GAMESUBGROUP`
    FOREIGN KEY (`game_subgroup_id`)
    REFERENCES `GameCollectionSubgroup` (`game_subgroup_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_GAMECOLLECTION_GAME`
    FOREIGN KEY (`game_id`)
    REFERENCES `Game` (`game_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `GameMarket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `GameMarket` ;

CREATE TABLE IF NOT EXISTS `GameMarket` (
  `game_market_id` INT NOT NULL AUTO_INCREMENT,
  `game_price` DECIMAL(6,2) NOT NULL DEFAULT 0000.00,
  `game_id` INT NOT NULL,
  `marketplace_id` INT NOT NULL,
  PRIMARY KEY (`game_market_id`, `game_id`, `marketplace_id`),
  INDEX `PKFK_GAMEMARKET_GAME_idx` (`game_id` ASC) VISIBLE,
  INDEX `PKFK_GAMEMARKET_MARKETPLACE_idx` (`marketplace_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_GAMEMARKET_GAME`
    FOREIGN KEY (`game_id`)
    REFERENCES `Game` (`game_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_GAMEMARKET_MARKETPLACE`
    FOREIGN KEY (`marketplace_id`)
    REFERENCES `Marketplace` (`marketplace_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewsSection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NewsSection` ;

CREATE TABLE IF NOT EXISTS `NewsSection` (
  `news_section_id` INT NOT NULL AUTO_INCREMENT,
  `num_articles` INT NOT NULL,
  `section_head` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`news_section_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NewsArticle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NewsArticle` ;

CREATE TABLE IF NOT EXISTS `NewsArticle` (
  `article_id` INT NOT NULL AUTO_INCREMENT,
  `article_title` VARCHAR(50) NOT NULL,
  `created` DATE NOT NULL,
  `topic` VARCHAR(30) NOT NULL,
  `author` VARCHAR(30) NOT NULL,
  `news_section_id` INT NOT NULL,
  PRIMARY KEY (`article_id`),
  INDEX `FK_NEWSARTICLE_NEWSSECTION_idx` (`news_section_id` ASC) VISIBLE,
  CONSTRAINT `FK_NEWSARTICLE_NEWSSECTION`
    FOREIGN KEY (`news_section_id`)
    REFERENCES `NewsSection` (`news_section_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ArticleReading`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ArticleReading` ;

CREATE TABLE IF NOT EXISTS `ArticleReading` (
  `article_reading_id` INT NOT NULL AUTO_INCREMENT,
  `accessed` DATE NOT NULL,
  `article_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`article_reading_id`, `article_id`, `user_id`),
  INDEX `PKFK_ARTICLEREAD_ARTICLE_idx` (`article_id` ASC) VISIBLE,
  INDEX `PKFK_ARTICLEREAD_USER_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `PKFK_ARTICLEREAD_ARTICLE`
    FOREIGN KEY (`article_id`)
    REFERENCES `NewsArticle` (`article_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `PKFK_ARTICLEREAD_USER`
    FOREIGN KEY (`user_id`)
    REFERENCES `User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SectionAccess`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SectionAccess` ;

CREATE TABLE IF NOT EXISTS `SectionAccess` (
  `section_access_id` INT NOT NULL AUTO_INCREMENT,
  `news_section_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `accessed` DATE NOT NULL,
  PRIMARY KEY (`section_access_id`, `news_section_id`, `user_id`),
  INDEX `FKPK_SECTIONACCESS_NEWSSECTION_idx` (`news_section_id` ASC) VISIBLE,
  INDEX `FKPK_SECTIONACCESS_USER_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `FKPK_SECTIONACCESS_NEWSSECTION`
    FOREIGN KEY (`news_section_id`)
    REFERENCES `NewsSection` (`news_section_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FKPK_SECTIONACCESS_USER`
    FOREIGN KEY (`user_id`)
    REFERENCES `User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
